{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["##**Kütüphaneleri import etme**"],"metadata":{"id":"-02hIAGwSuKT"}},{"cell_type":"code","source":["# Bu kütüphane, diziler ve matrislerle çalışma desteğinin yanı sıra bu diziler üzerinde çalışacak çeşitli matematiksel işlevler sağlar.\n","import numpy as np\n","\n","# Pandas güçlü bir veri işleme ve analiz kütüphanesidir. Kolay veri işleme ve analize olanak tanıyan DataFrames ve Seriler gibi veri yapıları sağlar\n","import pandas as pd\n","\n","# Bu, scikit-learn kütüphanesinin bir parçasıdır ve benzer veri noktalarını kümeler halinde gruplandıran denetimsiz bir makine öğrenme\n","#algoritması olan K-means kümelemesini gerçekleştirmek için kullanılır.\n","from sklearn.cluster import KMeans\n","\n","# \"Pyplot\" alt modülü, çeşitli türde grafikler ve görselleştirmeler oluşturmaya yönelik işlevler sağlar\n","import matplotlib.pyplot as plt\n","\n","import networkx as nx\n","\n","\n","# Boyutsallığın azaltılması için scikit-learn'in bir diğer kısmı olan PCA (Temel Bileşen Analizi) kullanılır.\n","from sklearn.decomposition import PCA\n","\n","pd.set_option(\"display.max_columns\", None)    # Pandas dataframe'de görüntülenecek maksimum sütun sayısını sınırsız olacak şekilde ayarlar\n","pd.set_option(\"display.max_rows\", None)       # Pandas dataframe'de görüntülenecek maksimum satır sayısını sınırsız olacak şekilde ayarlar\n","pd.set_option(\"display.width\", None)          # Pandas dataframe için ekranın maksimum genişliğini sınırsız olacak şekilde ayarlar\n","pd.set_option(\"display.max_colwidth\", None)   # Sütun içeriğinin maksimum genişliğini sınırsız olacak şekilde ayarlayarak metin verilerinin tam olarak görüntülenmesini sağlar\n","\n","print(\"Kütüphaneleri eklediniz.\")"],"metadata":{"id":"f4gB0giqStb3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713993802070,"user_tz":-180,"elapsed":294,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"b6463d05-34df-4e24-c4c3-e79dc654f50a"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stdout","text":["Kütüphaneleri eklediniz.\n"]}]},{"cell_type":"markdown","source":["## Verileri Pandas dataframe'e yükleme"],"metadata":{"id":"UERTw4criZmq"}},{"cell_type":"code","source":["# CSV dosyasını (dataset) Pandas datafrrame'e yükleme\n","df = pd.read_csv(\"https://www.sciencebuddies.org/ai/colab/spotify.csv?t=AQVDvCU5GGNWC9zYg328Rv6LtqH-MAMXLfR9RKWUa5JaLw\")\n","\n","# Datasetindeki ilk 5 elemanı görme\n","df.head()"],"metadata":{"id":"ZhxQCP2WiaDQ","colab":{"base_uri":"https://localhost:8080/","height":677},"executionInfo":{"status":"ok","timestamp":1713993806697,"user_tz":-180,"elapsed":709,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"458169b3-ad10-4ad1-da24-94f637640848"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Artist                                          Track  \\\n","0  Gorillaz                                 Feel Good Inc.   \n","1  Gorillaz                                Rhinestone Eyes   \n","2  Gorillaz  New Gold (feat. Tame Impala and Bootie Brown)   \n","3  Gorillaz                             On Melancholy Hill   \n","4  Gorillaz                                 Clint Eastwood   \n","\n","                                           Album Album_type  Danceability  Energy  Loudness  \\\n","0                                     Demon Days      album         0.818   0.705    -6.679   \n","1                                  Plastic Beach      album         0.676   0.703    -5.815   \n","2  New Gold (feat. Tame Impala and Bootie Brown)     single         0.695   0.923    -3.930   \n","3                                  Plastic Beach      album         0.689   0.739    -5.810   \n","4                                       Gorillaz      album         0.663   0.694    -8.627   \n","\n","   Speechiness  Acousticness  Instrumentalness  Liveness  Valence    Tempo  Duration_min  \\\n","0       0.1770      0.008360          0.002330    0.6130    0.772  138.559      3.710667   \n","1       0.0302      0.086900          0.000687    0.0463    0.852   92.761      3.336217   \n","2       0.0522      0.042500          0.046900    0.1160    0.551  108.014      3.585833   \n","3       0.0260      0.000015          0.509000    0.0640    0.578  120.423      3.897783   \n","4       0.1710      0.025300          0.000000    0.0698    0.525  167.953      5.682000   \n","\n","                                                                      Title   Channel  \\\n","0                                Gorillaz - Feel Good Inc. (Official Video)  Gorillaz   \n","1       Gorillaz - Rhinestone Eyes [Storyboard Film] (Official Music Video)  Gorillaz   \n","2  Gorillaz - New Gold ft. Tame Impala & Bootie Brown (Official Visualiser)  Gorillaz   \n","3                            Gorillaz - On Melancholy Hill (Official Video)  Gorillaz   \n","4                                Gorillaz - Clint Eastwood (Official Video)  Gorillaz   \n","\n","         Views      Likes  Comments Licensed official_video        Stream  EnergyLiveness  \\\n","0  693555221.0  6220896.0  169907.0     True           True  1.040235e+09        1.150082   \n","1   72011645.0  1079128.0   31003.0     True           True  3.100837e+08       15.183585   \n","2    8435055.0   282142.0    7399.0     True           True  6.306347e+07        7.956897   \n","3  211754952.0  1788577.0   55229.0     True           True  4.346636e+08       11.546875   \n","4  618480958.0  6197318.0  155930.0     True           True  6.172597e+08        9.942693   \n","\n","  most_playedon  \n","0       Spotify  \n","1       Spotify  \n","2       Spotify  \n","3       Spotify  \n","4       Youtube  "],"text/html":["\n","  <div id=\"df-f9a7c638-5c7a-4f03-b1b3-8876bb007329\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Artist</th>\n","      <th>Track</th>\n","      <th>Album</th>\n","      <th>Album_type</th>\n","      <th>Danceability</th>\n","      <th>Energy</th>\n","      <th>Loudness</th>\n","      <th>Speechiness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","      <th>Liveness</th>\n","      <th>Valence</th>\n","      <th>Tempo</th>\n","      <th>Duration_min</th>\n","      <th>Title</th>\n","      <th>Channel</th>\n","      <th>Views</th>\n","      <th>Likes</th>\n","      <th>Comments</th>\n","      <th>Licensed</th>\n","      <th>official_video</th>\n","      <th>Stream</th>\n","      <th>EnergyLiveness</th>\n","      <th>most_playedon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Gorillaz</td>\n","      <td>Feel Good Inc.</td>\n","      <td>Demon Days</td>\n","      <td>album</td>\n","      <td>0.818</td>\n","      <td>0.705</td>\n","      <td>-6.679</td>\n","      <td>0.1770</td>\n","      <td>0.008360</td>\n","      <td>0.002330</td>\n","      <td>0.6130</td>\n","      <td>0.772</td>\n","      <td>138.559</td>\n","      <td>3.710667</td>\n","      <td>Gorillaz - Feel Good Inc. (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>693555221.0</td>\n","      <td>6220896.0</td>\n","      <td>169907.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>1.040235e+09</td>\n","      <td>1.150082</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Gorillaz</td>\n","      <td>Rhinestone Eyes</td>\n","      <td>Plastic Beach</td>\n","      <td>album</td>\n","      <td>0.676</td>\n","      <td>0.703</td>\n","      <td>-5.815</td>\n","      <td>0.0302</td>\n","      <td>0.086900</td>\n","      <td>0.000687</td>\n","      <td>0.0463</td>\n","      <td>0.852</td>\n","      <td>92.761</td>\n","      <td>3.336217</td>\n","      <td>Gorillaz - Rhinestone Eyes [Storyboard Film] (Official Music Video)</td>\n","      <td>Gorillaz</td>\n","      <td>72011645.0</td>\n","      <td>1079128.0</td>\n","      <td>31003.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>3.100837e+08</td>\n","      <td>15.183585</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gorillaz</td>\n","      <td>New Gold (feat. Tame Impala and Bootie Brown)</td>\n","      <td>New Gold (feat. Tame Impala and Bootie Brown)</td>\n","      <td>single</td>\n","      <td>0.695</td>\n","      <td>0.923</td>\n","      <td>-3.930</td>\n","      <td>0.0522</td>\n","      <td>0.042500</td>\n","      <td>0.046900</td>\n","      <td>0.1160</td>\n","      <td>0.551</td>\n","      <td>108.014</td>\n","      <td>3.585833</td>\n","      <td>Gorillaz - New Gold ft. Tame Impala &amp; Bootie Brown (Official Visualiser)</td>\n","      <td>Gorillaz</td>\n","      <td>8435055.0</td>\n","      <td>282142.0</td>\n","      <td>7399.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>6.306347e+07</td>\n","      <td>7.956897</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gorillaz</td>\n","      <td>On Melancholy Hill</td>\n","      <td>Plastic Beach</td>\n","      <td>album</td>\n","      <td>0.689</td>\n","      <td>0.739</td>\n","      <td>-5.810</td>\n","      <td>0.0260</td>\n","      <td>0.000015</td>\n","      <td>0.509000</td>\n","      <td>0.0640</td>\n","      <td>0.578</td>\n","      <td>120.423</td>\n","      <td>3.897783</td>\n","      <td>Gorillaz - On Melancholy Hill (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>211754952.0</td>\n","      <td>1788577.0</td>\n","      <td>55229.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>4.346636e+08</td>\n","      <td>11.546875</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Gorillaz</td>\n","      <td>Clint Eastwood</td>\n","      <td>Gorillaz</td>\n","      <td>album</td>\n","      <td>0.663</td>\n","      <td>0.694</td>\n","      <td>-8.627</td>\n","      <td>0.1710</td>\n","      <td>0.025300</td>\n","      <td>0.000000</td>\n","      <td>0.0698</td>\n","      <td>0.525</td>\n","      <td>167.953</td>\n","      <td>5.682000</td>\n","      <td>Gorillaz - Clint Eastwood (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>618480958.0</td>\n","      <td>6197318.0</td>\n","      <td>155930.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>6.172597e+08</td>\n","      <td>9.942693</td>\n","      <td>Youtube</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9a7c638-5c7a-4f03-b1b3-8876bb007329')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f9a7c638-5c7a-4f03-b1b3-8876bb007329 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f9a7c638-5c7a-4f03-b1b3-8876bb007329');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-61a079f0-7c95-41da-a260-b09834c10411\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61a079f0-7c95-41da-a260-b09834c10411')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-61a079f0-7c95-41da-a260-b09834c10411 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["## Veri setini işleme"],"metadata":{"id":"p33Ot2Alidoi"}},{"cell_type":"markdown","source":["NaN verileri silme"],"metadata":{"id":"Mue8C8YOBE51"}},{"cell_type":"code","source":["# Tablonıun NaN verileri silmeden önceki hali\n","print(\"Tablonun NaN verileri silmeden önceki hali:\", df.shape)\n","\n","# NaN verilerin silinmesi\n","df.dropna(inplace=True)\n","\n","# Tablonun NaN verilerin silindikten sonraki hali\n","print(\"Tablonun NaN verilerin silindikten sonraki hali:\", df.shape)\n","df.head()"],"metadata":{"id":"qFAaMkQailt1","colab":{"base_uri":"https://localhost:8080/","height":713},"executionInfo":{"status":"ok","timestamp":1713993809731,"user_tz":-180,"elapsed":4,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"edef1e15-c210-4c58-bc75-9e7b333fc0b9"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["Tablonun NaN verileri silmeden önceki hali: (20594, 24)\n","Tablonun NaN verilerin silindikten sonraki hali: (20592, 24)\n"]},{"output_type":"execute_result","data":{"text/plain":["     Artist                                          Track  \\\n","0  Gorillaz                                 Feel Good Inc.   \n","1  Gorillaz                                Rhinestone Eyes   \n","2  Gorillaz  New Gold (feat. Tame Impala and Bootie Brown)   \n","3  Gorillaz                             On Melancholy Hill   \n","4  Gorillaz                                 Clint Eastwood   \n","\n","                                           Album Album_type  Danceability  Energy  Loudness  \\\n","0                                     Demon Days      album         0.818   0.705    -6.679   \n","1                                  Plastic Beach      album         0.676   0.703    -5.815   \n","2  New Gold (feat. Tame Impala and Bootie Brown)     single         0.695   0.923    -3.930   \n","3                                  Plastic Beach      album         0.689   0.739    -5.810   \n","4                                       Gorillaz      album         0.663   0.694    -8.627   \n","\n","   Speechiness  Acousticness  Instrumentalness  Liveness  Valence    Tempo  Duration_min  \\\n","0       0.1770      0.008360          0.002330    0.6130    0.772  138.559      3.710667   \n","1       0.0302      0.086900          0.000687    0.0463    0.852   92.761      3.336217   \n","2       0.0522      0.042500          0.046900    0.1160    0.551  108.014      3.585833   \n","3       0.0260      0.000015          0.509000    0.0640    0.578  120.423      3.897783   \n","4       0.1710      0.025300          0.000000    0.0698    0.525  167.953      5.682000   \n","\n","                                                                      Title   Channel  \\\n","0                                Gorillaz - Feel Good Inc. (Official Video)  Gorillaz   \n","1       Gorillaz - Rhinestone Eyes [Storyboard Film] (Official Music Video)  Gorillaz   \n","2  Gorillaz - New Gold ft. Tame Impala & Bootie Brown (Official Visualiser)  Gorillaz   \n","3                            Gorillaz - On Melancholy Hill (Official Video)  Gorillaz   \n","4                                Gorillaz - Clint Eastwood (Official Video)  Gorillaz   \n","\n","         Views      Likes  Comments Licensed official_video        Stream  EnergyLiveness  \\\n","0  693555221.0  6220896.0  169907.0     True           True  1.040235e+09        1.150082   \n","1   72011645.0  1079128.0   31003.0     True           True  3.100837e+08       15.183585   \n","2    8435055.0   282142.0    7399.0     True           True  6.306347e+07        7.956897   \n","3  211754952.0  1788577.0   55229.0     True           True  4.346636e+08       11.546875   \n","4  618480958.0  6197318.0  155930.0     True           True  6.172597e+08        9.942693   \n","\n","  most_playedon  \n","0       Spotify  \n","1       Spotify  \n","2       Spotify  \n","3       Spotify  \n","4       Youtube  "],"text/html":["\n","  <div id=\"df-c3e276f3-63a5-4388-b042-5516744a2d52\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Artist</th>\n","      <th>Track</th>\n","      <th>Album</th>\n","      <th>Album_type</th>\n","      <th>Danceability</th>\n","      <th>Energy</th>\n","      <th>Loudness</th>\n","      <th>Speechiness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","      <th>Liveness</th>\n","      <th>Valence</th>\n","      <th>Tempo</th>\n","      <th>Duration_min</th>\n","      <th>Title</th>\n","      <th>Channel</th>\n","      <th>Views</th>\n","      <th>Likes</th>\n","      <th>Comments</th>\n","      <th>Licensed</th>\n","      <th>official_video</th>\n","      <th>Stream</th>\n","      <th>EnergyLiveness</th>\n","      <th>most_playedon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Gorillaz</td>\n","      <td>Feel Good Inc.</td>\n","      <td>Demon Days</td>\n","      <td>album</td>\n","      <td>0.818</td>\n","      <td>0.705</td>\n","      <td>-6.679</td>\n","      <td>0.1770</td>\n","      <td>0.008360</td>\n","      <td>0.002330</td>\n","      <td>0.6130</td>\n","      <td>0.772</td>\n","      <td>138.559</td>\n","      <td>3.710667</td>\n","      <td>Gorillaz - Feel Good Inc. (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>693555221.0</td>\n","      <td>6220896.0</td>\n","      <td>169907.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>1.040235e+09</td>\n","      <td>1.150082</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Gorillaz</td>\n","      <td>Rhinestone Eyes</td>\n","      <td>Plastic Beach</td>\n","      <td>album</td>\n","      <td>0.676</td>\n","      <td>0.703</td>\n","      <td>-5.815</td>\n","      <td>0.0302</td>\n","      <td>0.086900</td>\n","      <td>0.000687</td>\n","      <td>0.0463</td>\n","      <td>0.852</td>\n","      <td>92.761</td>\n","      <td>3.336217</td>\n","      <td>Gorillaz - Rhinestone Eyes [Storyboard Film] (Official Music Video)</td>\n","      <td>Gorillaz</td>\n","      <td>72011645.0</td>\n","      <td>1079128.0</td>\n","      <td>31003.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>3.100837e+08</td>\n","      <td>15.183585</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gorillaz</td>\n","      <td>New Gold (feat. Tame Impala and Bootie Brown)</td>\n","      <td>New Gold (feat. Tame Impala and Bootie Brown)</td>\n","      <td>single</td>\n","      <td>0.695</td>\n","      <td>0.923</td>\n","      <td>-3.930</td>\n","      <td>0.0522</td>\n","      <td>0.042500</td>\n","      <td>0.046900</td>\n","      <td>0.1160</td>\n","      <td>0.551</td>\n","      <td>108.014</td>\n","      <td>3.585833</td>\n","      <td>Gorillaz - New Gold ft. Tame Impala &amp; Bootie Brown (Official Visualiser)</td>\n","      <td>Gorillaz</td>\n","      <td>8435055.0</td>\n","      <td>282142.0</td>\n","      <td>7399.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>6.306347e+07</td>\n","      <td>7.956897</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gorillaz</td>\n","      <td>On Melancholy Hill</td>\n","      <td>Plastic Beach</td>\n","      <td>album</td>\n","      <td>0.689</td>\n","      <td>0.739</td>\n","      <td>-5.810</td>\n","      <td>0.0260</td>\n","      <td>0.000015</td>\n","      <td>0.509000</td>\n","      <td>0.0640</td>\n","      <td>0.578</td>\n","      <td>120.423</td>\n","      <td>3.897783</td>\n","      <td>Gorillaz - On Melancholy Hill (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>211754952.0</td>\n","      <td>1788577.0</td>\n","      <td>55229.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>4.346636e+08</td>\n","      <td>11.546875</td>\n","      <td>Spotify</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Gorillaz</td>\n","      <td>Clint Eastwood</td>\n","      <td>Gorillaz</td>\n","      <td>album</td>\n","      <td>0.663</td>\n","      <td>0.694</td>\n","      <td>-8.627</td>\n","      <td>0.1710</td>\n","      <td>0.025300</td>\n","      <td>0.000000</td>\n","      <td>0.0698</td>\n","      <td>0.525</td>\n","      <td>167.953</td>\n","      <td>5.682000</td>\n","      <td>Gorillaz - Clint Eastwood (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>618480958.0</td>\n","      <td>6197318.0</td>\n","      <td>155930.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>6.172597e+08</td>\n","      <td>9.942693</td>\n","      <td>Youtube</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3e276f3-63a5-4388-b042-5516744a2d52')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c3e276f3-63a5-4388-b042-5516744a2d52 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c3e276f3-63a5-4388-b042-5516744a2d52');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b1cd8dd6-9e6c-455f-8dc5-a66bff10e079\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1cd8dd6-9e6c-455f-8dc5-a66bff10e079')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b1cd8dd6-9e6c-455f-8dc5-a66bff10e079 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["Özellikleri silme"],"metadata":{"id":"NWXdRqSNBHGe"}},{"cell_type":"code","source":["# Silinmesi istenen kolonları yaz\n","columns_to_drop = ['Artist', 'Album', 'Album_type', 'Title', 'Channel', 'Licensed', 'official_video', 'most_playedon', 'Track']\n","\n","# Belirtilen sütunları hariç tutan yeni bir dataframe oluşturma\n","dropped_df = df.drop(columns=columns_to_drop)\n","\n","# Belirtilen kolonların orada olup olmadığını kontrol\n","dropped_df.head()"],"metadata":{"id":"0IwtY0Xfifd5","colab":{"base_uri":"https://localhost:8080/","height":226},"executionInfo":{"status":"ok","timestamp":1713993814089,"user_tz":-180,"elapsed":4,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"e9caa1a7-654a-49dc-f134-23a4956fab2a"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Danceability  Energy  Loudness  Speechiness  Acousticness  Instrumentalness  Liveness  Valence  \\\n","0         0.818   0.705    -6.679       0.1770      0.008360          0.002330    0.6130    0.772   \n","1         0.676   0.703    -5.815       0.0302      0.086900          0.000687    0.0463    0.852   \n","2         0.695   0.923    -3.930       0.0522      0.042500          0.046900    0.1160    0.551   \n","3         0.689   0.739    -5.810       0.0260      0.000015          0.509000    0.0640    0.578   \n","4         0.663   0.694    -8.627       0.1710      0.025300          0.000000    0.0698    0.525   \n","\n","     Tempo  Duration_min        Views      Likes  Comments        Stream  EnergyLiveness  \n","0  138.559      3.710667  693555221.0  6220896.0  169907.0  1.040235e+09        1.150082  \n","1   92.761      3.336217   72011645.0  1079128.0   31003.0  3.100837e+08       15.183585  \n","2  108.014      3.585833    8435055.0   282142.0    7399.0  6.306347e+07        7.956897  \n","3  120.423      3.897783  211754952.0  1788577.0   55229.0  4.346636e+08       11.546875  \n","4  167.953      5.682000  618480958.0  6197318.0  155930.0  6.172597e+08        9.942693  "],"text/html":["\n","  <div id=\"df-3cc1254a-72e4-45d1-b7ca-c86c1f14804e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Danceability</th>\n","      <th>Energy</th>\n","      <th>Loudness</th>\n","      <th>Speechiness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","      <th>Liveness</th>\n","      <th>Valence</th>\n","      <th>Tempo</th>\n","      <th>Duration_min</th>\n","      <th>Views</th>\n","      <th>Likes</th>\n","      <th>Comments</th>\n","      <th>Stream</th>\n","      <th>EnergyLiveness</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.818</td>\n","      <td>0.705</td>\n","      <td>-6.679</td>\n","      <td>0.1770</td>\n","      <td>0.008360</td>\n","      <td>0.002330</td>\n","      <td>0.6130</td>\n","      <td>0.772</td>\n","      <td>138.559</td>\n","      <td>3.710667</td>\n","      <td>693555221.0</td>\n","      <td>6220896.0</td>\n","      <td>169907.0</td>\n","      <td>1.040235e+09</td>\n","      <td>1.150082</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.676</td>\n","      <td>0.703</td>\n","      <td>-5.815</td>\n","      <td>0.0302</td>\n","      <td>0.086900</td>\n","      <td>0.000687</td>\n","      <td>0.0463</td>\n","      <td>0.852</td>\n","      <td>92.761</td>\n","      <td>3.336217</td>\n","      <td>72011645.0</td>\n","      <td>1079128.0</td>\n","      <td>31003.0</td>\n","      <td>3.100837e+08</td>\n","      <td>15.183585</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.695</td>\n","      <td>0.923</td>\n","      <td>-3.930</td>\n","      <td>0.0522</td>\n","      <td>0.042500</td>\n","      <td>0.046900</td>\n","      <td>0.1160</td>\n","      <td>0.551</td>\n","      <td>108.014</td>\n","      <td>3.585833</td>\n","      <td>8435055.0</td>\n","      <td>282142.0</td>\n","      <td>7399.0</td>\n","      <td>6.306347e+07</td>\n","      <td>7.956897</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.689</td>\n","      <td>0.739</td>\n","      <td>-5.810</td>\n","      <td>0.0260</td>\n","      <td>0.000015</td>\n","      <td>0.509000</td>\n","      <td>0.0640</td>\n","      <td>0.578</td>\n","      <td>120.423</td>\n","      <td>3.897783</td>\n","      <td>211754952.0</td>\n","      <td>1788577.0</td>\n","      <td>55229.0</td>\n","      <td>4.346636e+08</td>\n","      <td>11.546875</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.663</td>\n","      <td>0.694</td>\n","      <td>-8.627</td>\n","      <td>0.1710</td>\n","      <td>0.025300</td>\n","      <td>0.000000</td>\n","      <td>0.0698</td>\n","      <td>0.525</td>\n","      <td>167.953</td>\n","      <td>5.682000</td>\n","      <td>618480958.0</td>\n","      <td>6197318.0</td>\n","      <td>155930.0</td>\n","      <td>6.172597e+08</td>\n","      <td>9.942693</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3cc1254a-72e4-45d1-b7ca-c86c1f14804e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3cc1254a-72e4-45d1-b7ca-c86c1f14804e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3cc1254a-72e4-45d1-b7ca-c86c1f14804e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-363e8dc4-892d-461a-97b0-ff789c0190ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-363e8dc4-892d-461a-97b0-ff789c0190ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-363e8dc4-892d-461a-97b0-ff789c0190ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dropped_df","summary":"{\n  \"name\": \"dropped_df\",\n  \"rows\": 20592,\n  \"fields\": [\n    {\n      \"column\": \"Danceability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1653993293559765,\n        \"min\": 0.0,\n        \"max\": 0.975,\n        \"num_unique_values\": 898,\n        \"samples\": [\n          0.38,\n          0.811,\n          0.47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21419318707724708,\n        \"min\": 2.03e-05,\n        \"max\": 1.0,\n        \"num_unique_values\": 1267,\n        \"samples\": [\n          0.0278,\n          0.0304,\n          0.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loudness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.639088902183054,\n        \"min\": -46.251,\n        \"max\": 0.92,\n        \"num_unique_values\": 9387,\n        \"samples\": [\n          -31.948,\n          -7.819,\n          -4.159\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speechiness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11218340248246222,\n        \"min\": 0.0,\n        \"max\": 0.964,\n        \"num_unique_values\": 1303,\n        \"samples\": [\n          0.0365,\n          0.0934,\n          0.07\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acousticness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28611653907459283,\n        \"min\": 1.11e-06,\n        \"max\": 0.996,\n        \"num_unique_values\": 3130,\n        \"samples\": [\n          0.547,\n          0.000671,\n          0.449\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Instrumentalness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19363013152177677,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 4005,\n        \"samples\": [\n          0.00271,\n          2.2e-06,\n          6.9e-06\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.168829470979576,\n        \"min\": 0.0145,\n        \"max\": 1.0,\n        \"num_unique_values\": 1536,\n        \"samples\": [\n          0.433,\n          0.273,\n          0.648\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Valence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24549868889283238,\n        \"min\": 0.0,\n        \"max\": 0.993,\n        \"num_unique_values\": 1293,\n        \"samples\": [\n          0.78,\n          0.637,\n          0.556\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tempo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29.565661615106936,\n        \"min\": 0.0,\n        \"max\": 243.372,\n        \"num_unique_values\": 14954,\n        \"samples\": [\n          136.052,\n          171.788,\n          118.383\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.084985951369019,\n        \"min\": 0.5164166666666666,\n        \"max\": 77.9343,\n        \"num_unique_values\": 14608,\n        \"samples\": [\n          3.71765,\n          2.47355,\n          4.239133333333333\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 272614628.29957163,\n        \"min\": 0.0,\n        \"max\": 8079649362.0,\n        \"num_unique_values\": 19122,\n        \"samples\": [\n          204281507.0,\n          6301819.0,\n          294678986.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1773725.231023731,\n        \"min\": 0.0,\n        \"max\": 50788652.0,\n        \"num_unique_values\": 17829,\n        \"samples\": [\n          18719.0,\n          28057.0,\n          183453.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Comments\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191184.25153504743,\n        \"min\": 0.0,\n        \"max\": 16083138.0,\n        \"num_unique_values\": 10428,\n        \"samples\": [\n          13655.0,\n          17353.0,\n          15265.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stream\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 242369943.14174888,\n        \"min\": 0.0,\n        \"max\": 3386520288.0,\n        \"num_unique_values\": 18337,\n        \"samples\": [\n          3434091.0,\n          127167540.0,\n          215026398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EnergyLiveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.1174313105670235,\n        \"min\": 4.86810551558753e-05,\n        \"max\": 59.11392405063291,\n        \"num_unique_values\": 17617,\n        \"samples\": [\n          9.692671394799056,\n          9.21198668146504,\n          8.173076923076923\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["# Dataframe'deki sayısal kolonlar hakkında bilgilerin özetini sağlamak için define()\n","dropped_df.describe()"],"metadata":{"id":"iHue1OKXjQtY","colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"status":"ok","timestamp":1713993816341,"user_tz":-180,"elapsed":6,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"9bb9b083-d5c9-47eb-dde8-bb7e33ef6982"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Danceability        Energy      Loudness   Speechiness  Acousticness  Instrumentalness  \\\n","count  20592.000000  20592.000000  20592.000000  20592.000000  20592.000000      20592.000000   \n","mean       0.620162      0.635238     -7.678999      0.096742      0.291419          0.056167   \n","std        0.165399      0.214193      4.639089      0.112183      0.286117          0.193630   \n","min        0.000000      0.000020    -46.251000      0.000000      0.000001          0.000000   \n","25%        0.519000      0.507000     -8.868250      0.035700      0.045200          0.000000   \n","50%        0.638000      0.666000     -6.541000      0.050700      0.193000          0.000002   \n","75%        0.741000      0.798000     -4.935000      0.104000      0.477000          0.000474   \n","max        0.975000      1.000000      0.920000      0.964000      0.996000          1.000000   \n","\n","           Liveness       Valence         Tempo  Duration_min         Views         Likes  \\\n","count  20592.000000  20592.000000  20592.000000  20592.000000  2.059200e+04  2.059200e+04   \n","mean       0.193672      0.530128    120.574326      3.742802  9.204529e+07  6.480451e+05   \n","std        0.168829      0.245499     29.565662      2.084986  2.726146e+08  1.773725e+06   \n","min        0.014500      0.000000      0.000000      0.516417  0.000000e+00  0.000000e+00   \n","25%        0.094100      0.340000     96.994750      2.997546  1.478416e+06  1.754600e+04   \n","50%        0.125000      0.538000    119.959500      3.551433  1.331348e+07  1.153155e+05   \n","75%        0.237000      0.727000    139.924500      4.202329  6.740061e+07  5.000950e+05   \n","max        1.000000      0.993000    243.372000     77.934300  8.079649e+09  5.078865e+07   \n","\n","           Comments        Stream  EnergyLiveness  \n","count  2.059200e+04  2.059200e+04    20592.000000  \n","mean   2.684902e+04  1.326451e+08        5.167227  \n","std    1.911843e+05  2.423699e+08        4.117431  \n","min    0.000000e+00  0.000000e+00        0.000049  \n","25%    4.060000e+02  1.558757e+07        2.386190  \n","50%    3.006000e+03  4.730244e+07        4.256881  \n","75%    1.373900e+04  1.343384e+08        6.822034  \n","max    1.608314e+07  3.386520e+09       59.113924  "],"text/html":["\n","  <div id=\"df-1975a8fe-91fb-4d7e-9c1a-b07e66301c1f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Danceability</th>\n","      <th>Energy</th>\n","      <th>Loudness</th>\n","      <th>Speechiness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","      <th>Liveness</th>\n","      <th>Valence</th>\n","      <th>Tempo</th>\n","      <th>Duration_min</th>\n","      <th>Views</th>\n","      <th>Likes</th>\n","      <th>Comments</th>\n","      <th>Stream</th>\n","      <th>EnergyLiveness</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>2.059200e+04</td>\n","      <td>2.059200e+04</td>\n","      <td>2.059200e+04</td>\n","      <td>2.059200e+04</td>\n","      <td>20592.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.620162</td>\n","      <td>0.635238</td>\n","      <td>-7.678999</td>\n","      <td>0.096742</td>\n","      <td>0.291419</td>\n","      <td>0.056167</td>\n","      <td>0.193672</td>\n","      <td>0.530128</td>\n","      <td>120.574326</td>\n","      <td>3.742802</td>\n","      <td>9.204529e+07</td>\n","      <td>6.480451e+05</td>\n","      <td>2.684902e+04</td>\n","      <td>1.326451e+08</td>\n","      <td>5.167227</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.165399</td>\n","      <td>0.214193</td>\n","      <td>4.639089</td>\n","      <td>0.112183</td>\n","      <td>0.286117</td>\n","      <td>0.193630</td>\n","      <td>0.168829</td>\n","      <td>0.245499</td>\n","      <td>29.565662</td>\n","      <td>2.084986</td>\n","      <td>2.726146e+08</td>\n","      <td>1.773725e+06</td>\n","      <td>1.911843e+05</td>\n","      <td>2.423699e+08</td>\n","      <td>4.117431</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000020</td>\n","      <td>-46.251000</td>\n","      <td>0.000000</td>\n","      <td>0.000001</td>\n","      <td>0.000000</td>\n","      <td>0.014500</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.516417</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000049</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.519000</td>\n","      <td>0.507000</td>\n","      <td>-8.868250</td>\n","      <td>0.035700</td>\n","      <td>0.045200</td>\n","      <td>0.000000</td>\n","      <td>0.094100</td>\n","      <td>0.340000</td>\n","      <td>96.994750</td>\n","      <td>2.997546</td>\n","      <td>1.478416e+06</td>\n","      <td>1.754600e+04</td>\n","      <td>4.060000e+02</td>\n","      <td>1.558757e+07</td>\n","      <td>2.386190</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.638000</td>\n","      <td>0.666000</td>\n","      <td>-6.541000</td>\n","      <td>0.050700</td>\n","      <td>0.193000</td>\n","      <td>0.000002</td>\n","      <td>0.125000</td>\n","      <td>0.538000</td>\n","      <td>119.959500</td>\n","      <td>3.551433</td>\n","      <td>1.331348e+07</td>\n","      <td>1.153155e+05</td>\n","      <td>3.006000e+03</td>\n","      <td>4.730244e+07</td>\n","      <td>4.256881</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.741000</td>\n","      <td>0.798000</td>\n","      <td>-4.935000</td>\n","      <td>0.104000</td>\n","      <td>0.477000</td>\n","      <td>0.000474</td>\n","      <td>0.237000</td>\n","      <td>0.727000</td>\n","      <td>139.924500</td>\n","      <td>4.202329</td>\n","      <td>6.740061e+07</td>\n","      <td>5.000950e+05</td>\n","      <td>1.373900e+04</td>\n","      <td>1.343384e+08</td>\n","      <td>6.822034</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>0.975000</td>\n","      <td>1.000000</td>\n","      <td>0.920000</td>\n","      <td>0.964000</td>\n","      <td>0.996000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.993000</td>\n","      <td>243.372000</td>\n","      <td>77.934300</td>\n","      <td>8.079649e+09</td>\n","      <td>5.078865e+07</td>\n","      <td>1.608314e+07</td>\n","      <td>3.386520e+09</td>\n","      <td>59.113924</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1975a8fe-91fb-4d7e-9c1a-b07e66301c1f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1975a8fe-91fb-4d7e-9c1a-b07e66301c1f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1975a8fe-91fb-4d7e-9c1a-b07e66301c1f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e28538c4-1a9f-4995-ba36-fb15aafb89a8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e28538c4-1a9f-4995-ba36-fb15aafb89a8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e28538c4-1a9f-4995-ba36-fb15aafb89a8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dropped_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Danceability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.186640474586,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.6201620386557887,\n          0.638,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.178464053648,\n        \"min\": 2.03e-05,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.6352377639034578,\n          0.666,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loudness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7283.8586486933455,\n        \"min\": -46.251,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -7.678999417249417,\n          -6.541,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speechiness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.302567614629,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.09674244366744367,\n          0.0507,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acousticness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.255827072718,\n        \"min\": 1.11e-06,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2914192296047009,\n          0.193,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Instrumentalness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.308278748879,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          20592.0,\n          0.056167319399281275,\n          0.000474\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.27884002904,\n        \"min\": 0.0145,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.19367208624708623,\n          0.125,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Valence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.201031426333,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.5301284265734266,\n          0.538,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tempo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7242.841569989836,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          120.57432604895104,\n          119.95949999999999,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7275.6192208219945,\n        \"min\": 0.5164166666666666,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.7428020121082626,\n          3.5514333333333337,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2835503210.0214977,\n        \"min\": 0.0,\n        \"max\": 8079649362.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          92045291.1025641,\n          13313480.5,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17811117.881771296,\n        \"min\": 0.0,\n        \"max\": 50788652.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          648045.0663850039,\n          115315.5,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Comments\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5673688.737901816,\n        \"min\": 0.0,\n        \"max\": 16083138.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26849.019425019425,\n          3006.0,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stream\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1171469663.7592733,\n        \"min\": 0.0,\n        \"max\": 3386520288.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          132645068.34795067,\n          47302445.0,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EnergyLiveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7276.262700886902,\n        \"min\": 4.86810551558753e-05,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.167226824301721,\n          4.256880733944954,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["# TODO: Normalleştirilmesi istenen verileri girme\n","numerical_columns = ['Loudness', 'Tempo', 'Duration_min', 'Views', 'Likes', 'Comments', 'Energy', 'Liveness', 'Stream', 'EnergyLiveness']\n","\n","# Temizlenmiş verisetinin kopyasını oluşturma\n","final_df = dropped_df\n","\n","# Sayısal özellik sütunlarına min-max ölçeklendirme\n","final_df[numerical_columns] = (dropped_df[numerical_columns] - dropped_df[numerical_columns].min()) / (dropped_df[numerical_columns].max() - dropped_df[numerical_columns].min())\n","\n","# Normalizasyonun sonucunu görme\n","final_df.describe()"],"metadata":{"id":"ER1smI68jUH5","colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"status":"ok","timestamp":1713993818639,"user_tz":-180,"elapsed":308,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"dd6f1885-afb2-4cfd-fcb7-22d185e2f9e8"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Danceability        Energy      Loudness   Speechiness  Acousticness  Instrumentalness  \\\n","count  20592.000000  20592.000000  20592.000000  20592.000000  20592.000000      20592.000000   \n","mean       0.620162      0.635230      0.817706      0.096742      0.291419          0.056167   \n","std        0.165399      0.214198      0.098346      0.112183      0.286117          0.193630   \n","min        0.000000      0.000000      0.000000      0.000000      0.000001          0.000000   \n","25%        0.519000      0.506990      0.792494      0.035700      0.045200          0.000000   \n","50%        0.638000      0.665993      0.841831      0.050700      0.193000          0.000002   \n","75%        0.741000      0.797996      0.875877      0.104000      0.477000          0.000474   \n","max        0.975000      1.000000      1.000000      0.964000      0.996000          1.000000   \n","\n","           Liveness       Valence         Tempo  Duration_min         Views         Likes  \\\n","count  20592.000000  20592.000000  20592.000000  20592.000000  20592.000000  20592.000000   \n","mean       0.181808      0.530128      0.495432      0.041675      0.011392      0.012760   \n","std        0.171314      0.245499      0.121483      0.026932      0.033741      0.034924   \n","min        0.000000      0.000000      0.000000      0.000000      0.000000      0.000000   \n","25%        0.080771      0.340000      0.398545      0.032049      0.000183      0.000345   \n","50%        0.112126      0.538000      0.492906      0.039203      0.001648      0.002270   \n","75%        0.225774      0.727000      0.574941      0.047611      0.008342      0.009847   \n","max        1.000000      0.993000      1.000000      1.000000      1.000000      1.000000   \n","\n","           Comments        Stream  EnergyLiveness  \n","count  20592.000000  20592.000000    20592.000000  \n","mean       0.001669      0.039169        0.087411  \n","std        0.011887      0.071569        0.069653  \n","min        0.000000      0.000000        0.000000  \n","25%        0.000025      0.004603        0.040365  \n","50%        0.000187      0.013968        0.072011  \n","75%        0.000854      0.039669        0.115404  \n","max        1.000000      1.000000        1.000000  "],"text/html":["\n","  <div id=\"df-f66ae73b-753f-4293-88e5-27f08e12d59a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Danceability</th>\n","      <th>Energy</th>\n","      <th>Loudness</th>\n","      <th>Speechiness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","      <th>Liveness</th>\n","      <th>Valence</th>\n","      <th>Tempo</th>\n","      <th>Duration_min</th>\n","      <th>Views</th>\n","      <th>Likes</th>\n","      <th>Comments</th>\n","      <th>Stream</th>\n","      <th>EnergyLiveness</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","      <td>20592.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.620162</td>\n","      <td>0.635230</td>\n","      <td>0.817706</td>\n","      <td>0.096742</td>\n","      <td>0.291419</td>\n","      <td>0.056167</td>\n","      <td>0.181808</td>\n","      <td>0.530128</td>\n","      <td>0.495432</td>\n","      <td>0.041675</td>\n","      <td>0.011392</td>\n","      <td>0.012760</td>\n","      <td>0.001669</td>\n","      <td>0.039169</td>\n","      <td>0.087411</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.165399</td>\n","      <td>0.214198</td>\n","      <td>0.098346</td>\n","      <td>0.112183</td>\n","      <td>0.286117</td>\n","      <td>0.193630</td>\n","      <td>0.171314</td>\n","      <td>0.245499</td>\n","      <td>0.121483</td>\n","      <td>0.026932</td>\n","      <td>0.033741</td>\n","      <td>0.034924</td>\n","      <td>0.011887</td>\n","      <td>0.071569</td>\n","      <td>0.069653</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000001</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.519000</td>\n","      <td>0.506990</td>\n","      <td>0.792494</td>\n","      <td>0.035700</td>\n","      <td>0.045200</td>\n","      <td>0.000000</td>\n","      <td>0.080771</td>\n","      <td>0.340000</td>\n","      <td>0.398545</td>\n","      <td>0.032049</td>\n","      <td>0.000183</td>\n","      <td>0.000345</td>\n","      <td>0.000025</td>\n","      <td>0.004603</td>\n","      <td>0.040365</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.638000</td>\n","      <td>0.665993</td>\n","      <td>0.841831</td>\n","      <td>0.050700</td>\n","      <td>0.193000</td>\n","      <td>0.000002</td>\n","      <td>0.112126</td>\n","      <td>0.538000</td>\n","      <td>0.492906</td>\n","      <td>0.039203</td>\n","      <td>0.001648</td>\n","      <td>0.002270</td>\n","      <td>0.000187</td>\n","      <td>0.013968</td>\n","      <td>0.072011</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.741000</td>\n","      <td>0.797996</td>\n","      <td>0.875877</td>\n","      <td>0.104000</td>\n","      <td>0.477000</td>\n","      <td>0.000474</td>\n","      <td>0.225774</td>\n","      <td>0.727000</td>\n","      <td>0.574941</td>\n","      <td>0.047611</td>\n","      <td>0.008342</td>\n","      <td>0.009847</td>\n","      <td>0.000854</td>\n","      <td>0.039669</td>\n","      <td>0.115404</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>0.975000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.964000</td>\n","      <td>0.996000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.993000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f66ae73b-753f-4293-88e5-27f08e12d59a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f66ae73b-753f-4293-88e5-27f08e12d59a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f66ae73b-753f-4293-88e5-27f08e12d59a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9557c12b-6239-4279-94f5-6e102072a014\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9557c12b-6239-4279-94f5-6e102072a014')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9557c12b-6239-4279-94f5-6e102072a014 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"final_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Danceability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.186640474586,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.6201620386557887,\n          0.638,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Energy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.178466288542,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.635230359079747,\n          0.6659932196623591,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Loudness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.147869145132,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.8177058061679967,\n          0.8418307858641961,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Speechiness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.302567614629,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.09674244366744367,\n          0.0507,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Acousticness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.255827072718,\n        \"min\": 1.11e-06,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.2914192296047009,\n          0.193,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Instrumentalness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.308278748879,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          20592.0,\n          0.056167319399281275,\n          0.000474\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Liveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.281936770063,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.18180830669415143,\n          0.11212582445459157,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Valence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.201031426333,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.5301284265734266,\n          0.538,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tempo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.215694770514,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.4954322027552514,\n          0.49290592179872783,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.311450776833,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.04167493615848357,\n          0.03920304374118556,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Views\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.3181263622055,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.011392238323542747,\n          0.0016477794893693803,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Likes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.317881895629,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.012759642968767982,\n          0.0022704973544090123,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Comments\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.320181264443,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.0016693893582843983,\n          0.0001869038243656182,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stream\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.312384829941,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.039168543834795025,\n          0.01396786110144219,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EnergyLiveness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7280.301481400255,\n        \"min\": 0.0,\n        \"max\": 20592.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.08741058018851851,\n          0.07201070859043232,\n          20592.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":63}]},{"cell_type":"markdown","source":["##Graf oluşturma"],"metadata":{"id":"OlXjrGeT4eA3"}},{"cell_type":"markdown","source":["## Veriyi kümeleme"],"metadata":{"id":"Y-lEuLmhjVqK"}},{"cell_type":"code","source":["def optimise_k_means(df, k):\n","  \"\"\"\n","Bu fonksiyon verilen bir veri çerçevesi (df) üzerinde K-Means kümeleme algoritmasını kullanarak\n","kümeleme işlemi gerçekleştirir. Ayrıca, küme sayısını belirlemek için dirsek eğrisini çizer.\n","\n","  Argümanlar:\n","      df (pd.DataFrame): Kümelenecek veri girişi\n","      k (int): Max küme sayısı\n","\n","  Dönenler:\n","          wcss (list): Küme içi karelerin toplamı. Bu değer her bir kümenin merkezine olan uzaklıkların karelerinin toplamını ifade eder.\n","          fig (matplotlib.figure.Figure): Dirsek eğrisi grafiğini içeren şekil nesnesi\n","  \"\"\"\n","\n","  wcss = []\n","\n","  # Loop through different values of k\n","  for i in range(1, k + 1):\n","      kmeans = KMeans(n_clusters=i, random_state=2)\n","      kmeans.fit(df)\n","      wcss.append(kmeans.inertia_)\n","\n","  # Plot the elbow curve\n","  fig = plt.figure(figsize=(7, 7))\n","  plt.plot(range(1, k + 1), wcss, 'ko')\n","  plt.ylabel('WCSS', size=14)\n","  plt.xlabel('Number of clusters', size=14)\n","  plt.title('Elbow Curve for K-Means Clustering', size=16)\n","  plt.grid(True)\n","\n","  return wcss, fig"],"metadata":{"id":"1Z1C_LkgjZPj","executionInfo":{"status":"ok","timestamp":1713993822181,"user_tz":-180,"elapsed":351,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["optimise_k_means(final_df, 10)"],"metadata":{"id":"sZAGgmv1jcBQ","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1713993842551,"user_tz":-180,"elapsed":16008,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"d83a30fe-8f42-4c2e-a405-d71a1674ed40"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"execute_result","data":{"text/plain":["([6844.950625233814,\n","  4952.226995956458,\n","  4272.9805948277535,\n","  3658.9682924240265,\n","  3345.9661673755104,\n","  3084.3030005803075,\n","  2895.8013637258437,\n","  2736.1839391692074,\n","  2625.5366643890507,\n","  2542.8274524008552],\n"," <Figure size 700x700 with 1 Axes>)"]},"metadata":{},"execution_count":65},{"output_type":"display_data","data":{"text/plain":["<Figure size 700x700 with 1 Axes>"],"image/png":"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fruRZD744AOX9qefftpIMpJMr169XJZt3brVSDIRERHF2s8DBw446/7oo4+Ktc7Z0tPTjSTToUOHQvs4ai2sfeTIkcbDw8O0a9fO3HHHHaZNmzbm999/N48++qiRZP79738XuN28vDwTEhJiJJlvvvnGZdkDDzxgJBkPDw9z4403mttvv920adPG2Gw24+npad58881i7V9WVpYZNGiQadasmZFkmjVrZgYNGmQGDRpkHnjgAWe/devWmerVqxtJpl69eqZv376mW7duxtfX10gycXFx5uTJky7bnj17tpFk4uPjTUREhKlWrZq59dZbze23324GDBhQrPrOfn8vXLjQ+XwPP/xwsdY/1/jx440kM2zYMLN//37j6+trrrzySpc+ubm5pnLlyqZevXrGbrc7PxPvvPNOvu1Nnz7d+f5q3ry5SUxMNO3atTPe3t5Gkpk4cWK+dYYNG2YkmauvvtrExcWZvn37mqioKOd2Ro8enW8dx/vwpptuMl26dDH+/v6mW7dupnfv3s7PWFBQUL7P87Jly4yXl5dzbBMTE02vXr3MjTfeaHx8fEzPnj2L/dq1aNHCSDKjRo0q9jpnc7yO6enpxWp3cIzZ+PHjXdqHDBni/HnTpUsXc8cdd5i4uDhz5ZVXGklmwYIFxhhjfvzxRzNo0CDnZykuLs75Hh80aJDJyspybvP77793vp6hoaGmW7dupkePHs51mzdvbg4ePFhgff379zfVq1c3tWrVMr179zYJCQnOz9C2bduMJBMeHp5v/xw/J8aNG2dsNptp27at6du3r/MzabPZTGpqar71vv/+e1OjRg0jydSuXdv06dPHxMfHm8qVK5t27dqZm266qcjXFReGcIcycanCnSQzefJkl2UZGRnGz8/PSDJffPGFy7KHH37YSDINGzZ02eapU6ecv8wiIiJcAsArr7xiJJl//etfLtvq2LGj8fb2NldffbUJCgoyp0+fPu86hVm+fLlzf7Zv316sdc5WGuEuICDAZGdn51v+888/O38pHz9+PN/yTz75xEgyrVq1cml/9dVXjSTTqFEj8/XXX7ssy8zMNFWrVjXe3t7m559/LuZeFv4L1Jh/grvj/XLPPfeYU6dOOZdt3brV1K9f30gyjz32mMt6jnAnyXTu3NkcOnSo2PU4OJ43Pj7eVKpUyUgy//3vf0u8HYezw50xxtxx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X//S0qVLNXfu3IsuEgAAAMVTonA3b9481a9fXz179jxv3x49eqhhw4Z6//33L7g4AAAAlEyJwt1XX31VoqlNYmJitGnTphIXBQAAgAtTonD3999/q1atWsXuHxISor///rvERQEAAODClCjc+fv769ChQ8Xuf/jwYfn7+5e4KAAAAFyYEoW7Bg0aaO3atcXun52drYYNG5a4KAAAAFyYEoW7rl27auPGjVqxYsV5+6anp2vDhg3q2rXrBRcHAACAkilRuBs1apR8fX3Vr18/ZWRkFNovMzNTffv2lb+/v0aNGnWxNQIAAKCYSvT1Y7Vr19brr7+ugQMHqnPnzmrbtq06duyosLAwSdKuXbu0fPlyrVmzRjabTe+++65CQ0MvSeEAAADIr8TfLXvHHXeoWrVqGjFihFatWqVVq1bJZrNJkowxkv65Nm/GjBmKi4sr3WoBAABQpBKHO0nq1q2bfvnlF6Wnp2v16tXKycmRJNWqVct5NM/Dg6+tBQAAKGslCnfjx49X586dFRkZKW9vb3Xu3FmdO3e+VLUBAACghEp0eO3JJ59Ux44dFRQUpM6dO+upp57S6tWrdfr06UtVHwAAAEqgREfuXnjhBWVkZCgrK0vp6elKT0+XzWaTn5+f2rZtq06dOqljx45q3bo1p2UBAADcoEThLjk5WcnJyTLG6Ouvv3YGvFWrViktLU1paWmy2WyqUqWKoqOj1bFjR3Xs2FEtW7a8VPUDAADgLBd0Q4XNZlPz5s3VvHlzjR49WsYYbd68WStWrFBGRoZWrVqlzz//XIsXL5bNZuO0LQAAQBm5oHB3LpvNphYtWqhFixa6/fbblZaWppSUFH333XelsXkAAAAU00WHu927dztPz6anp+v333+XJFWpUkXdunVThw4dLvYpAAAAUEwlDnf79u1zCXO//vqrjDEKDAxUu3btdN9996lDhw5q2bIlN1UAAACUsRKFuyZNmmjLli2SpGrVqik6Olr33nuvOnTooObNmzu/qQIAAADuUaJw99NPP8nDw0O9evXS/fffr8jISHl5eV2q2gAAAFBCJTpvev/99+u6665TamqqYmJiVK1aNXXp0kVPPfWUVq1apby8vEtVJwAAAIqhREfupk+fLknav3+/MjIylJ6erszMTI0fP16S5Ovrq8jISMXExCgmJoYjewAAAGXsgu6WrV69uhIS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69S/f3917NhR7dq1U0BAQInqAqyAcAegUPfff79eeuklTZ06Vffdd1+pb7+gX7yVKlUqctnp06cL3FZISEi+Nk9PTwUHB+vQoUPOtv3790uS86hecRW0/aI4rgUrbD1HiHX0uxCO/apTp84Fb6Okbr/9dn388cd64YUXNGvWLM2YMUM2m00dO3bU1KlTCwzlBdm/f79Onz6tiRMnFtrn6NGj+doKez3/85//KDg4WDNnztTUqVP1/PPPq1KlSoqPj9e0adMUERFRrLoAK+C0LIBC+fn5aeLEiTpy5EiRv4Q9PDwKDV1nB6tLae/evfna7Ha7/v77bwUGBjrbHKExNzdXxphC/52rpN/s4HieguqSpJycHJd+FyIoKEiStGvXrgvehofHP78GChq/wsauZ8+eyszM1IEDB7R48WLdfffdysjIULdu3XTw4MFiPW9AQICCg4OLHINt27blW6+wcbDZbBo6dKjWr1+vP//8UwsWLFBCQoI++eQT3XLLLfnuvgWsjHAHoEiDBg3Stddeq9dee02//vprgX2qVaumffv25QsIR48e1S+//FIWZSorKytfW3Z2tk6fPq0WLVo429q0aSPp/07PXiqO5yxoipGjR49qw4YN8vPzU+PGjS/4ORo3bqyAgACtX7/+vFOeFMZxOreggHj26eyCVK1aVd26ddOrr76qwYMHa+/evS6nzT08PAoNVW3atNHff/99Sd4fwcHBuu222/TBBx+oU6dO+uGHHwp97wJWRLgDUCRPT09NnjxZeXl5hV53d8MNNygvL0/vvfees80Yo0cffbTAU2uXQkpKinbu3Ol8fOrUKT3++OOS5DIVx3333adKlSpp1KhRBU5ncvDgwfOGmuJo27atGjZsqMWLF2vZsmUuy5566in9/fffuuOOO/JNuVISlSpV0r///W8dOnRISUlJ+YLUoUOHznszjONawrfffltnzpxxtmdnZ7uMp8PKlSsLDGz79u2TJPn6+jrbqlev7jImZ7v//vslSUOHDnWZ888hJydHP/74Y5G1ny0jIyPfEde8vDznafiz6wKsjmvuAJzXrbfeqnbt2mnVqlUFLh85cqRmz56tu+++W2lpabriiiuUlZWlgwcPqlmzZoXe4VqaIiMj1axZM/Xt21eVK1fWwoULtWXLFiUkJLjMcXbdddfp5Zdf1r333qvGjRvr5ptvVsOGDXX48GH99ttvyszM1ODBgzVr1qyLqsfDw0Nz5sxRXFycbr75Zt1+++0KDw9Xdna2MjIy1LBhQz3zzDMXu9uaNGmS1q5dq3feeUdr165V9+7d5ePjo99++01ffPGFVq1aVeR1cJGRkWrbtq1WrFihqKgotW/fXn/88Yc++eQT9ejRQwsWLHDpf//992v37t1q166d6tevL5vNplWrVmndunWKjIxUu3btnH07deqkDz/8ULfddptatGghT09P3Xrrrbr++uvVrVs3PfHEE3ryySfVqFEjdevWTeHh4fr777/166+/KisrS0899ZSuueaaYr0Ot912mwICAhQZGanw8HDl5eUpLS1NP/zwgxITExUeHn5Bry9QIZX97CsAyqNz57k71+rVq53zvZ07z50xxqxYscK0adPG+Pj4mODgYDNw4ECzd+/eEs+t5pi3btu2bfmWFbQtR/+tW7eaZ555xjRq1Mh4e3ub8PBwM2HCBHPy5MkC92fdunWmX79+pnbt2sbLy8vUqFHDtGzZ0jzyyCPmxx9/dPZzzHM3fvz4ArdzPt98841JTEw0NWrUMF5eXiY8PNwkJSWZP//8M1/fC5nnzhhjTpw4YZ5//nnTvHlz4+fnZ6pUqWKaNGliHnjgAXPgwAFnv4JeP2P+mQfurrvuMtWrVzd+fn4mMjLSLFmypMB57t5//33Tp08f07BhQ+Pv728CAwNNs2bNzLPPPusyp54xxuzZs8f06dPH1KhRw3h4eOTbljHGpKWlmR49epgrrrjCeHl5mVq1apmoqCjz5JNPmu3btzv7FVTL2V5++WVz6623mvDwcOPr62uCg4PNjTfeaGbOnGlOnTpVotcTqOhsxvDlkQAAAFbBNXcAAAAWQrgDAACwEMIdAACAhRDuAAAALIRwBwAAYCGEOwAAAAsh3AEAAFgI4Q4AAMBCCHcAAAAWQrgDAACwEMIdAACAhRDuAAAALOT/AzRamgZeMFgYAAAAAElFTkSuQmCC\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## K-Means Kümelenmesini Uygulama"],"metadata":{"id":"2gsd_qfrjezP"}},{"cell_type":"code","source":["# 3 kümeli K-Means modeli oluşturma\n","kmeans = KMeans(n_clusters= 3, n_init='auto') # TODO: Insert number of clusters\n","\n","# Veri setinin son halini K-Means modeline sığdırma\n","kmeans.fit(final_df)\n","\n","# Her veri noktasına küme etiketi atama\n","df['Cluster'] = kmeans.labels_\n","final_df['Cluster'] = kmeans.labels_\n","\n","df.head()"],"metadata":{"id":"JmKZ9sITjgkS","colab":{"base_uri":"https://localhost:8080/","height":677},"executionInfo":{"status":"ok","timestamp":1713993847191,"user_tz":-180,"elapsed":332,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"7db75cee-ed08-42cf-d3c0-06a1b63b6799"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Artist                                          Track  \\\n","0  Gorillaz                                 Feel Good Inc.   \n","1  Gorillaz                                Rhinestone Eyes   \n","2  Gorillaz  New Gold (feat. Tame Impala and Bootie Brown)   \n","3  Gorillaz                             On Melancholy Hill   \n","4  Gorillaz                                 Clint Eastwood   \n","\n","                                           Album Album_type  Danceability  Energy  Loudness  \\\n","0                                     Demon Days      album         0.818   0.705    -6.679   \n","1                                  Plastic Beach      album         0.676   0.703    -5.815   \n","2  New Gold (feat. Tame Impala and Bootie Brown)     single         0.695   0.923    -3.930   \n","3                                  Plastic Beach      album         0.689   0.739    -5.810   \n","4                                       Gorillaz      album         0.663   0.694    -8.627   \n","\n","   Speechiness  Acousticness  Instrumentalness  Liveness  Valence    Tempo  Duration_min  \\\n","0       0.1770      0.008360          0.002330    0.6130    0.772  138.559      3.710667   \n","1       0.0302      0.086900          0.000687    0.0463    0.852   92.761      3.336217   \n","2       0.0522      0.042500          0.046900    0.1160    0.551  108.014      3.585833   \n","3       0.0260      0.000015          0.509000    0.0640    0.578  120.423      3.897783   \n","4       0.1710      0.025300          0.000000    0.0698    0.525  167.953      5.682000   \n","\n","                                                                      Title   Channel  \\\n","0                                Gorillaz - Feel Good Inc. (Official Video)  Gorillaz   \n","1       Gorillaz - Rhinestone Eyes [Storyboard Film] (Official Music Video)  Gorillaz   \n","2  Gorillaz - New Gold ft. Tame Impala & Bootie Brown (Official Visualiser)  Gorillaz   \n","3                            Gorillaz - On Melancholy Hill (Official Video)  Gorillaz   \n","4                                Gorillaz - Clint Eastwood (Official Video)  Gorillaz   \n","\n","         Views      Likes  Comments Licensed official_video        Stream  EnergyLiveness  \\\n","0  693555221.0  6220896.0  169907.0     True           True  1.040235e+09        1.150082   \n","1   72011645.0  1079128.0   31003.0     True           True  3.100837e+08       15.183585   \n","2    8435055.0   282142.0    7399.0     True           True  6.306347e+07        7.956897   \n","3  211754952.0  1788577.0   55229.0     True           True  4.346636e+08       11.546875   \n","4  618480958.0  6197318.0  155930.0     True           True  6.172597e+08        9.942693   \n","\n","  most_playedon  Cluster  \n","0       Spotify        0  \n","1       Spotify        0  \n","2       Spotify        0  \n","3       Spotify        1  \n","4       Youtube        1  "],"text/html":["\n","  <div id=\"df-655e4cc8-9c0d-42b9-81a0-15a2bf00cd7f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Artist</th>\n","      <th>Track</th>\n","      <th>Album</th>\n","      <th>Album_type</th>\n","      <th>Danceability</th>\n","      <th>Energy</th>\n","      <th>Loudness</th>\n","      <th>Speechiness</th>\n","      <th>Acousticness</th>\n","      <th>Instrumentalness</th>\n","      <th>Liveness</th>\n","      <th>Valence</th>\n","      <th>Tempo</th>\n","      <th>Duration_min</th>\n","      <th>Title</th>\n","      <th>Channel</th>\n","      <th>Views</th>\n","      <th>Likes</th>\n","      <th>Comments</th>\n","      <th>Licensed</th>\n","      <th>official_video</th>\n","      <th>Stream</th>\n","      <th>EnergyLiveness</th>\n","      <th>most_playedon</th>\n","      <th>Cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Gorillaz</td>\n","      <td>Feel Good Inc.</td>\n","      <td>Demon Days</td>\n","      <td>album</td>\n","      <td>0.818</td>\n","      <td>0.705</td>\n","      <td>-6.679</td>\n","      <td>0.1770</td>\n","      <td>0.008360</td>\n","      <td>0.002330</td>\n","      <td>0.6130</td>\n","      <td>0.772</td>\n","      <td>138.559</td>\n","      <td>3.710667</td>\n","      <td>Gorillaz - Feel Good Inc. (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>693555221.0</td>\n","      <td>6220896.0</td>\n","      <td>169907.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>1.040235e+09</td>\n","      <td>1.150082</td>\n","      <td>Spotify</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Gorillaz</td>\n","      <td>Rhinestone Eyes</td>\n","      <td>Plastic Beach</td>\n","      <td>album</td>\n","      <td>0.676</td>\n","      <td>0.703</td>\n","      <td>-5.815</td>\n","      <td>0.0302</td>\n","      <td>0.086900</td>\n","      <td>0.000687</td>\n","      <td>0.0463</td>\n","      <td>0.852</td>\n","      <td>92.761</td>\n","      <td>3.336217</td>\n","      <td>Gorillaz - Rhinestone Eyes [Storyboard Film] (Official Music Video)</td>\n","      <td>Gorillaz</td>\n","      <td>72011645.0</td>\n","      <td>1079128.0</td>\n","      <td>31003.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>3.100837e+08</td>\n","      <td>15.183585</td>\n","      <td>Spotify</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Gorillaz</td>\n","      <td>New Gold (feat. Tame Impala and Bootie Brown)</td>\n","      <td>New Gold (feat. Tame Impala and Bootie Brown)</td>\n","      <td>single</td>\n","      <td>0.695</td>\n","      <td>0.923</td>\n","      <td>-3.930</td>\n","      <td>0.0522</td>\n","      <td>0.042500</td>\n","      <td>0.046900</td>\n","      <td>0.1160</td>\n","      <td>0.551</td>\n","      <td>108.014</td>\n","      <td>3.585833</td>\n","      <td>Gorillaz - New Gold ft. Tame Impala &amp; Bootie Brown (Official Visualiser)</td>\n","      <td>Gorillaz</td>\n","      <td>8435055.0</td>\n","      <td>282142.0</td>\n","      <td>7399.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>6.306347e+07</td>\n","      <td>7.956897</td>\n","      <td>Spotify</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Gorillaz</td>\n","      <td>On Melancholy Hill</td>\n","      <td>Plastic Beach</td>\n","      <td>album</td>\n","      <td>0.689</td>\n","      <td>0.739</td>\n","      <td>-5.810</td>\n","      <td>0.0260</td>\n","      <td>0.000015</td>\n","      <td>0.509000</td>\n","      <td>0.0640</td>\n","      <td>0.578</td>\n","      <td>120.423</td>\n","      <td>3.897783</td>\n","      <td>Gorillaz - On Melancholy Hill (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>211754952.0</td>\n","      <td>1788577.0</td>\n","      <td>55229.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>4.346636e+08</td>\n","      <td>11.546875</td>\n","      <td>Spotify</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Gorillaz</td>\n","      <td>Clint Eastwood</td>\n","      <td>Gorillaz</td>\n","      <td>album</td>\n","      <td>0.663</td>\n","      <td>0.694</td>\n","      <td>-8.627</td>\n","      <td>0.1710</td>\n","      <td>0.025300</td>\n","      <td>0.000000</td>\n","      <td>0.0698</td>\n","      <td>0.525</td>\n","      <td>167.953</td>\n","      <td>5.682000</td>\n","      <td>Gorillaz - Clint Eastwood (Official Video)</td>\n","      <td>Gorillaz</td>\n","      <td>618480958.0</td>\n","      <td>6197318.0</td>\n","      <td>155930.0</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>6.172597e+08</td>\n","      <td>9.942693</td>\n","      <td>Youtube</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-655e4cc8-9c0d-42b9-81a0-15a2bf00cd7f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-655e4cc8-9c0d-42b9-81a0-15a2bf00cd7f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-655e4cc8-9c0d-42b9-81a0-15a2bf00cd7f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-afcea0e3-8d38-45c8-8475-41aadbfc7274\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-afcea0e3-8d38-45c8-8475-41aadbfc7274')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-afcea0e3-8d38-45c8-8475-41aadbfc7274 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":[],"metadata":{"id":"SSXIpYLMGsKo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"wslc8xXyGrPJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Modeli görselleştirme"],"metadata":{"id":"iu1yvl_4jkDD"}},{"cell_type":"code","source":["# Veri kümesinin boyutunu azaltma\n","pca = PCA(n_components=2)\n","reduced_features = pca.fit_transform(final_df.drop('Cluster', axis=1)) # Exclude the cluster labels\n","\n","# Add the reduced components to the DataFrame\n","final_df['pca_1'] = reduced_features[:, 0]\n","final_df['pca_2'] = reduced_features[:, 1]\n","\n","# Küme dağılım grafiği oluşturma\n","plt.scatter(final_df['pca_1'], final_df['pca_2'], c=final_df['Cluster'], cmap='viridis')\n","plt.title('KMeans Clustering Results using PCA')\n","plt.xlabel('Principal Component 1')\n","plt.ylabel('Principal Component 2')\n","plt.show()"],"metadata":{"id":"5Cd1NT2ZjmQ5","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1713993854361,"user_tz":-180,"elapsed":1473,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"5472c9b1-7352-4d28-deca-6236fe68d3cf"},"execution_count":67,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##Şarkı Öneri Fonksiyonu"],"metadata":{"id":"8DT3T8r-jpFf"}},{"cell_type":"code","source":["def find_track_index(track_name, df):\n","    try:\n","        # Parça adı dizinin işlevini çağırma\n","        track_index = df[df['Track'] == track_name].index[0]\n","        # Bulunurse dizin döndürme\n","        return track_index\n","    except IndexError:\n","        # Parça adı bulunmadıysa hiçbir şey dönmesin\n","        return None"],"metadata":{"id":"jH2ChCFtjqu7","executionInfo":{"status":"ok","timestamp":1713993856384,"user_tz":-180,"elapsed":2,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["# This function finds song recommendations based on a given track name and the DataFrame 'df'\n","def find_song_recommendation(track_name, df):\n","    # Parça adı dizinin işlevini çağırma\n","    track_index = find_track_index(track_name, df)\n","    cluster = df.loc[track_index]['Cluster']\n","\n","    # Aynı kümede olan ve benzer şarkıların filtresini oluşturma\n","    filter = (df['Cluster'] == cluster)\n","\n","    # Filtreyi uygulama\n","    filtered_df = df[filter]\n","\n","    # Filtrelenmiş dataframe'den parçaları rastgele seçerek şarkı önerileri oluşturma\n","    for i in range(5):\n","        # Karıştırılan dataframe'den şarkı seçme\n","        recommendation = filtered_df.sample()\n","        # Şarkının adını yazdırma\n","        print(recommendation.iloc[0]['Track'] + ' by ' + recommendation.iloc[0]['Artist'])"],"metadata":{"id":"l1gt2F2AjsL2","executionInfo":{"status":"ok","timestamp":1713993859981,"user_tz":-180,"elapsed":2,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["# Şarkı adı girme\n","find_song_recommendation('Alright', df) #my own summer(shove it)"],"metadata":{"id":"7OjNJhwBju-a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713993863289,"user_tz":-180,"elapsed":296,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"d2e27332-8467-48cf-dd60-db06572b77dc"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["Ved Lavlay by Vishal Dadlani\n","Wild Thoughts (feat. Rihanna & Bryson Tiller) by DJ Khaled\n","Alone, Pt. II by Alan Walker\n","Ángel by Elefante\n","Hasta Ese Día by Lasso\n"]}]},{"cell_type":"markdown","source":["## Rasgele Şarkı Öneri Fonksiyonu\n"],"metadata":{"id":"Mna-TJVdjxUv"}},{"cell_type":"code","source":["def find_random_song(track_name, df):\n","    # Parça adı dizinin işlevini çağırma\n","    track_index = find_track_index(track_name, df)\n","    cluster = df.loc[track_index]['Cluster']\n","\n","    # Aynı kümede olmayan ama benzer şarkıların filtresini oluşturma\n","    filter = (df['Cluster'] != cluster)\n","\n","    # Filtreyi uygulama\n","    filtered_df = df[filter]\n","\n","    # Filtrelenmiş dataframe'den parçaları rastgele seçerek şarkı önerileri oluşturma\n","    for i in range(5):\n","        # Karıştırılan dataframe'den şarkı seçme\n","        random_song = filtered_df.sample()\n","        # Şarkının adını yazdırma\n","        print(random_song.iloc[0]['Track'] + ' by ' + random_song.iloc[0]['Artist'])"],"metadata":{"id":"vhVytgsKjx7g","executionInfo":{"status":"ok","timestamp":1713993867210,"user_tz":-180,"elapsed":1,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}}},"execution_count":71,"outputs":[]},{"cell_type":"code","source":["# Şarkı adı giriniz\n","find_random_song('Heavenly', df)"],"metadata":{"id":"f5e4H19pj0UL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713993869919,"user_tz":-180,"elapsed":2,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"e0b91179-1d92-4bd3-83e2-2e3635e7d190"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Another Love - Tiësto Remix by Tom Odell\n","Rasputin - Single Version by Boney M.\n","Leña de pirul by Banda Machos\n","Raid by Madvillain\n","Te Prometo by DENNIS\n"]}]},{"cell_type":"markdown","source":["## Modeli Değerlendirme\n"],"metadata":{"id":"l_TySQm6j1cO"}},{"cell_type":"code","source":["# Tavsiye edilen şarkıların tutarlılığını standart halinde girme\n","recommendations_accuracy = [0.6, 0.8, 0.6]\n","random_songs_accuracy = [0.2, 0.4, 0.2]\n","\n","recommendations_average = sum(recommendations_accuracy) / len(recommendations_accuracy)\n","random_songs_average = sum(random_songs_accuracy) / len(random_songs_accuracy)\n","\n","print(\"Tavsiye edilen şarkıların tutarlılığı:\", recommendations_average)\n","print(\"Rasgele tavsiye edilen şarkıların tutarlılığı:\", random_songs_average)"],"metadata":{"id":"_2NH5NLGj4GO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713993875590,"user_tz":-180,"elapsed":371,"user":{"displayName":"Tayfun","userId":"02418752135033300740"}},"outputId":"c4deccf2-6497-45d1-dbf1-f5cb2c198ee3"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["Tavsiye edilen şarkıların tutarlılığı: 0.6666666666666666\n","Rasgele tavsiye edilen şarkıların tutarlılığı: 0.26666666666666666\n"]}]},{"cell_type":"code","source":["# prompt: visualize a 3d relational network graph for the dataset in this code\n","\n","# Create a graph object\n","G = nx.Graph()\n","\n","# Add nodes to the graph\n","for row in df.itertuples():\n","    G.add_node(row.Track)\n","\n","# Add edges to the graph\n","for row in df.itertuples():\n","    for other_row in df.itertuples():\n","        if row.Track != other_row.Track:\n","            G.add_edge(row.Track, other_row.Track, weight=row.Stream)\n","\n","# Perform 3D layout using Kamada-Kawai algorithm\n","pos = nx.kamada_kawai_layout(G)\n","\n","# Create 3D plot\n","fig = plt.figure(figsize=(10, 7))\n","ax = fig.add_subplot(projection='3d')\n","\n","# Draw nodes and edges\n","nx.draw_networkx_nodes(G, pos, ax=ax)\n","nx.draw_networkx_edges(G, pos, width=1, alpha=0.5, ax=ax)\n","\n","# Set labels and title\n","ax.set_xlabel('Track')\n","ax.set_ylabel('Artist')\n","ax.set_zlabel('Stream')\n","ax.set_title('3D Relational Network Graph for Spotify Dataset')\n","\n","# Show the plot\n","plt.show()\n"],"metadata":{"id":"zwDBJTZD_2Wu"},"execution_count":null,"outputs":[]}]}